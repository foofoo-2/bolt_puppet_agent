# 
# Allow passwordless SSH logins from Puppet Master to Agents by using the
# key pairs generated by the Puppet CA. This is a small proof of concept
# that can be used together with bolt to allow issuing commands to the
# Agents without having to worry about setting up an extra authentication
# mechanism dedicated to this purpose.
#
# @summary Set up bolt user and allow passwordless SSH logins from Master
#
# @example
#   include bolt_puppet_agent
class bolt_puppet_agent {

  # Create bolt user and give him sudo rights
  user { 'bolt':
    system     => true,
    managehome => true,
    home       => '/var/lib/bolt',
    shell      => '/bin/bash',
    comment    => 'bolt user',
  }
  file { '/etc/sudoers.d/bolt':
    content => 'bolt  ALL=NOPASSWD: ALL',
    owner   => 'root',
    group   => 'root',
    mode    => '0640',
    require => User['bolt'],
  }

  # Retrieve Puppet Master public key filename (on Master)
  $master_pubkey_path = "${settings::ssldir}/public_keys"
  $master_pubkey_filename = generate(
    '/usr/bin/find', $master_pubkey_path, '-type', 'f'
  ).strip()

  # Retrieve Puppet Master public key content (on Master)
  $master_pubkey = generate(
    '/usr/bin/ssh-keygen', '-i', '-m', 'PKCS8', '-f', $master_pubkey_filename
  )
  $master_pubkey_array = split($master_pubkey, ' ').strip()

  # Add Puppet Master public key to bolt user's authorized_keys (on Agent)
  ssh_authorized_key { 'bolt from master':
    user => 'bolt',
    type => $master_pubkey_array[0],
    key  => $master_pubkey_array[1],
  }

}
